#!/usr/bin/env bash
set -euo pipefail

# --- Configuration ---
PYTHON_BIN="${PYTHON_BIN:-python3}"
PROJECT_ROOT="$(cd "$(dirname "$0")/.." && pwd)"
VENV_DIR="$PROJECT_ROOT/env"
REQ_FILE="$PROJECT_ROOT/requirements.txt"
MIGRATIONS_DIR="$PROJECT_ROOT/migrations"

echo "[setup] Project root: $PROJECT_ROOT"

# --- Create virtual environment ---
if [ ! -d "$VENV_DIR" ]; then
  echo "[setup] Creating virtual environment in $VENV_DIR"
  "$PYTHON_BIN" -m venv "$VENV_DIR"
else
  echo "[setup] Virtual environment already exists"
fi

source "$VENV_DIR/bin/activate"

# --- Upgrade pip ---
python -m pip install --upgrade pip wheel setuptools >/dev/null

# --- Install dependencies ---
if [ -f "$REQ_FILE" ]; then
  echo "[setup] Installing dependencies from requirements.txt"
  pip install -r "$REQ_FILE"
else
  echo "[setup] requirements.txt not found" >&2
  exit 1
fi

# --- Generate .env if missing ---
ENV_FILE="$PROJECT_ROOT/.env"
if [ ! -f "$ENV_FILE" ]; then
  cat > "$ENV_FILE" <<ENV
# Generated by scripts/setup_env.sh
FLASK_ENV=development
SECRET_KEY=$(python - <<'PY'
import secrets; print(secrets.token_hex(32))
PY
)
JWT_SECRET_KEY=$(python - <<'PY'
import secrets; print(secrets.token_hex(32))
PY
)
DATABASE_URI=sqlite:///app.db
REDIS_URL=redis://localhost:6379/0
JWT_COOKIE_SECURE=false
JWT_COOKIE_CSRF_PROTECT=false
ENV
  echo "[setup] Created default .env (edit for production!)"
else
  echo "[setup] .env already exists (skipping)"
fi

# --- Initialize database (Alembic) ---
if [ -d "$MIGRATIONS_DIR" ]; then
  echo "[setup] Running database migrations"
  export FLASK_APP=run.py
  flask db upgrade || echo "[setup] Migration step failed or not configured"
else
  echo "[setup] No migrations directory found, skipping alembic upgrade"
fi

# --- Redis availability check (optional) ---
if command -v redis-cli >/dev/null 2>&1; then
  if redis-cli ping >/dev/null 2>&1; then
    echo "[setup] Redis reachable"
  else
    echo "[setup] WARNING: Redis not responding; rate limiting will fall back to in-memory" >&2
  fi
else
  echo "[setup] redis-cli not installed; skipping Redis check"
fi

echo "[setup] Done. Activate with: source env/bin/activate"
